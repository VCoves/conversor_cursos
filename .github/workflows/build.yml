name: Build PyInstaller Project

on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write # This allows the action to create and manage releases


jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip' # caching pip dependencies
      
      - name: Install Dependencies using uv (Latest from pyproject.toml)
        run: |
          python -m venv .venv
          .venv\Scripts\activate
          python.exe -m pip install --upgrade pip  # It's good practice to upgrade pip first
          pip install uv             # Ensure uv is installed
          uv pip install --upgrade -r pyproject.toml

          
      - name: Build with PyInstaller
        run: |
          .venv\Scripts\activate
          set PYTHONOPTIMIZE=2
          pyinstaller --name=conversor --onedir test.py --noconsole --noconfirm

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Zip the dist directory
        run: |
          Compress-Archive -Path dist\* -DestinationPath conversor.zip

      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: conversor.zip
          asset_name: conversor.zip
          tag: ${{ github.ref_name }}
          overwrite: true
          body: "Version 1"
